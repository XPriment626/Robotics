// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/Drive.h"
#include "Commands/TankDrive.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Drive::Drive() : frc::Subsystem("Drive") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    left.reset(new frc::Spark(0));
    AddChild("Left", std::static_pointer_cast<frc::Spark>(left));
    
    left1.reset(new frc::Spark(1));
    AddChild("Left1", std::static_pointer_cast<frc::Spark>(left1));
    
    right.reset(new frc::Spark(2));
    AddChild("Right", std::static_pointer_cast<frc::Spark>(right));
    
    right1.reset(new frc::Spark(3));
    AddChild("Right1", std::static_pointer_cast<frc::Spark>(right1));
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Drive::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    this->SetDefaultCommand(new TankDrive());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Drive::setPower(double leftP,double rightP){
    left->Set(leftP);
    right->Set(rightP);
    left1->Set(leftP);
    right1->Set(rightP);
}
 
void Drive::Forward()
{
    /////////// should i use somehting other than victor ///////////
    //setPower(1,1);
    //Robot::oi->
}

void Drive::Backward()
{
    //victor->Set(-1);
}

void Drive::Stop()
{
    //victor->Set(0);
}

void Drive::Periodic() {
    // Put code here to be run every loop

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.

